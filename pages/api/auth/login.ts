import type {NextApiRequest,NextApiResponse} from 'next'; import prisma from '../../../lib/prisma'; import {compare} from '../../../lib/hash'; import {signToken} from '../../../lib/auth'; import cookie from 'cookie';
export default async function handler(req:NextApiRequest,res:NextApiResponse){ if(req.method!=='POST') return res.status(405).end(); const {email,password}=req.body; const user=await prisma.user.findUnique({where:{email},include:{wallet:true}}); if(!user) return res.status(401).json({error:'Invalid'}); const ok=await compare(password,user.password); if(!ok) return res.status(401).json({error:'Invalid'}); const token=signToken({userId:user.id}); res.setHeader('Set-Cookie',cookie.serialize('tx_token',token,{httpOnly:true,path:'/',maxAge:7200})); res.status(200).json({id:user.id,email:user.email,name:user.name,wallet:user.wallet})}
