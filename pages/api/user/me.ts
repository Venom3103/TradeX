import type {NextApiRequest,NextApiResponse} from 'next'; import prisma from '../../../lib/prisma'; import {verifyToken} from '../../../lib/auth'; import cookie from 'cookie';
export default async function handler(req:NextApiRequest,res:NextApiResponse){ const cookies=req.headers.cookie?cookie.parse(req.headers.cookie):{}; const token=cookies.tx_token; if(!token) return res.status(401).json({error:'Not Authenticated'}); const data=verifyToken(token); if(!data||typeof data==='string') return res.status(401).json({error:'Invalid Token'}); const userId=(data as any).userId; const user=await prisma.user.findUnique({where:{id:userId},include:{wallet:true}}); if(!user) return res.status(404).json({error:'User not found'}); res.status(200).json({id:user.id,email:user.email,name:user.name,wallet:user.wallet})}
