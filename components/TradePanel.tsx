'use client'
import {useState} from 'react'
function getCookie(name:string){if(typeof document==='undefined')return null; const v=document.cookie.match('(^|;)\\s*'+name+'\\s*=\\s*([^;]+)'); return v? v.pop():null}
export default function TradePanel({onTrade}:{onTrade?:()=>void}){const [symbol,setSymbol]=useState('AAPL');const [qty,setQty]=useState(1);const [msg,setMsg]=useState('');const [loading,setLoading]=useState(false);async function submit(e:any){e.preventDefault();setLoading(true);setMsg('');try{const token=getCookie('papertradex_token');const res=await fetch('/api/trade',{method:'POST',headers:{'Content-Type':'application/json',...(token?{Authorization:`Bearer ${token}`}:{})},body:JSON.stringify({symbol,qty})});const data=await res.json();if(res.ok){setMsg('Trade executed'); onTrade && onTrade()}else setMsg(data?.error||'Trade failed')}catch(err){setMsg('Network error')}setLoading(false)}return (<form onSubmit={submit} className="space-y-3 card p-4"><div className="small">New Trade</div><input className="input" value={symbol} onChange={e=>setSymbol(e.target.value.toUpperCase())} /><input className="input" type="number" value={qty} onChange={e=>setQty(Number(e.target.value))} min={1} /><button className="btn w-full" disabled={loading}>{loading?'Trading...':'Trade'}</button>{msg && <div className="small mt-2">{msg}</div>}</form>)}
